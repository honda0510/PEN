/* Generated By:JJTree&JavaCC: Do not edit this line. IntVParserTokenManager.java */

/** Token Manager. */
public class IntVParserTokenManager implements IntVParserConstants
{
        public int nLexicalErrors = 0;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         jjmatchedKind = 2;
         return jjMoveNfa_0(0, 0);
      case 10:
         jjmatchedKind = 31;
         return jjMoveNfa_0(0, 0);
      case 12:
         jjmatchedKind = 4;
         return jjMoveNfa_0(0, 0);
      case 13:
         jjmatchedKind = 3;
         return jjMoveNfa_0(0, 0);
      case 32:
         jjmatchedKind = 1;
         return jjMoveNfa_0(0, 0);
      case 40:
         jjmatchedKind = 29;
         return jjMoveNfa_0(0, 0);
      case 41:
         jjmatchedKind = 30;
         return jjMoveNfa_0(0, 0);
      case 45:
         return jjMoveStringLiteralDfa1_0(0x8000L, 0x0L, 0x0L);
      case 46:
         jjmatchedKind = 34;
         return jjMoveNfa_0(0, 0);
      case 47:
         jjmatchedKind = 12;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x200000000L);
      case 67:
         return jjMoveStringLiteralDfa1_0(0x8000000000L, 0x0L, 0x0L);
      case 68:
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L, 0x0L);
      case 69:
         return jjMoveStringLiteralDfa1_0(0x2000000000L, 0x0L, 0x0L);
      case 72:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L, 0x0L);
      case 76:
         return jjMoveStringLiteralDfa1_0(0x4000000000L, 0x0L, 0x0L);
      case 78:
         return jjMoveStringLiteralDfa1_0(0x50000000000L, 0x0L, 0x0L);
      case 91:
         jjmatchedKind = 27;
         return jjMoveNfa_0(0, 0);
      case 93:
         jjmatchedKind = 28;
         return jjMoveNfa_0(0, 0);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L, 0x0L);
      case 123:
         jjmatchedKind = 25;
         return jjMoveNfa_0(0, 0);
      case 124:
         jjmatchedKind = 5;
         return jjMoveNfa_0(0, 0);
      case 125:
         jjmatchedKind = 26;
         return jjMoveNfa_0(0, 0);
      case 247:
         jjmatchedKind = 11;
         return jjMoveNfa_0(0, 0);
      case 12288:
         jjmatchedKind = 7;
         return jjMoveNfa_0(0, 0);
      case 12363:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x8L, 0x0L);
      case 12378:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20L, 0x0L);
      case 12381:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000L, 0x0L);
      case 12391:
         return jjMoveStringLiteralDfa1_0(0x1000000L, 0x0L, 0x0L);
      case 12392:
         jjmatchedKind = 33;
         return jjMoveNfa_0(0, 0);
      case 12398:
         return jjMoveStringLiteralDfa1_0(0x0L, 0xe00L, 0x0L);
      case 12414:
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x10L, 0x0L);
      case 12418:
         return jjMoveStringLiteralDfa1_0(0x200000000000000L, 0x0L, 0x0L);
      case 12434:
         jjmatchedKind = 66;
         return jjMoveStringLiteralDfa1_0(0x100000000000000L, 0x10000L, 0x0L);
      case 12464:
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L, 0x0L);
      case 21442:
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L, 0x0L);
      case 23455:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x0L, 0x0L);
      case 25163:
         return jjMoveStringLiteralDfa1_0(0x14000000000000L, 0x0L, 0x0L);
      case 25972:
         return jjMoveStringLiteralDfa1_0(0x100000000000L, 0x0L, 0x0L);
      case 25991:
         return jjMoveStringLiteralDfa1_0(0x400000000000L, 0x0L, 0x0L);
      case 30495:
         return jjMoveStringLiteralDfa1_0(0x800000000000L, 0x0L, 0x0L);
      case 38306:
         return jjMoveStringLiteralDfa1_0(0xa0000000000000L, 0x0L, 0x0L);
      case 65372:
         jjmatchedKind = 6;
         return jjMoveNfa_0(0, 0);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 0);
   }
   switch(curChar)
   {
      case 42:
         if ((active2 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 161;
            jjmatchedPos = 1;
         }
         break;
      case 62:
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 15;
            jjmatchedPos = 1;
         }
         break;
      case 70:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L, active1, 0L, active2, 0L);
      case 76:
         if ((active0 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 40;
            jjmatchedPos = 1;
         }
         break;
      case 79:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000L, active1, 0L, active2, 0L);
      case 82:
         if ((active0 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 39;
            jjmatchedPos = 1;
         }
         break;
      case 84:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 1;
         }
         break;
      case 85:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000L, active1, 0L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L, active1, 0L, active2, 0L);
      case 12356:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L, active2, 0L);
      case 12375:
         if ((active0 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 57;
            jjmatchedPos = 1;
         }
         break;
      case 12383:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L, active2, 0L);
      case 12388:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 1;
         }
         else if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 1;
         }
         break;
      case 12391:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 1;
         }
         break;
      case 12394:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000L, active1, 0L, active2, 0L);
      case 12398:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L, active2, 0L);
      case 12425:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 1;
         }
         break;
      case 12525:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000L, active1, 0L, active2, 0L);
      case 20516:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200L, active2, 0L);
      case 20605:
         if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 1;
         }
         break;
      case 20837:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000L, active2, 0L);
      case 22580:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L, active2, 0L);
      case 23383:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000L, active1, 0L, active2, 0L);
      case 25968:
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 44;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000000L, active1, 0L, active2, 0L);
      case 29031:
         if ((active0 & 0x2000000000000L) != 0L)
         {
            jjmatchedKind = 49;
            jjmatchedPos = 1;
         }
         break;
      case 32154:
         return jjMoveStringLiteralDfa2_0(active0, 0x14000000000000L, active1, 0L, active2, 0L);
      case 36820:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000000L, active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjMoveNfa_0(0, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjMoveNfa_0(0, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 1);
   }
   switch(curChar)
   {
      case 70:
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 37;
            jjmatchedPos = 2;
         }
         break;
      case 76:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000000L, active1, 0L);
      case 80:
         if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 2;
         }
         break;
      case 112:
         if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 2;
         }
         break;
      case 12356:
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 24;
            jjmatchedPos = 2;
         }
         break;
      case 12365:
         if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L);
      case 12377:
         if ((active0 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 2;
         }
         break;
      case 12378:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400L);
      case 12395:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200L);
      case 12399:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 12434:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000000L, active1, 0L);
      case 12540:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000L, active1, 0L);
      case 20182:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000L);
      case 21015:
         if ((active0 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 46;
            jjmatchedPos = 2;
         }
         break;
      case 21147:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000L);
      case 21512:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800L);
      default :
         break;
   }
   return jjMoveNfa_0(0, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(0, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 2);
   }
   switch(curChar)
   {
      case 76:
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 42;
            jjmatchedPos = 3;
         }
         break;
      case 12377:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000L);
      case 12398:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      case 12428:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);
      case 12434:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000000000L, active1, 0L);
      case 12496:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000L, active1, 0L);
      case 24540:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 25244:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000000L, active1, 0L);
      case 65306:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 3;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(0, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(0, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 3);
   }
   switch(curChar)
   {
      case 12363:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x400L);
      case 12369:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000000L, active1, 0L);
      case 12376:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x200L);
      case 12427:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 4;
         }
         break;
      case 12523:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000L, active1, 0L);
      case 22580:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1000L);
      case 25244:
         return jjMoveStringLiteralDfa5_0(active0, 0x10000000000000L, active1, 0L);
      default :
         break;
   }
   return jjMoveNfa_0(0, 4);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(0, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 4);
   }
   switch(curChar)
   {
      case 12369:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000000000L, active1, 0L);
      case 12390:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 5;
         }
         break;
      case 12427:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 55;
            jjmatchedPos = 5;
         }
         break;
      case 12434:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x400L);
      case 21512:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1000L);
      case 22793:
         return jjMoveStringLiteralDfa6_0(active0, 0x80000000000L, active1, 0L);
      default :
         break;
   }
   return jjMoveNfa_0(0, 5);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(0, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 5);
   }
   switch(curChar)
   {
      case 12427:
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 52;
            jjmatchedPos = 6;
         }
         break;
      case 23455:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x400L);
      case 25968:
         if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 6;
         }
         break;
      case 65306:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 6;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(0, 6);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(0, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 6);
   }
   switch(curChar)
   {
      case 34892:
         return jjMoveStringLiteralDfa8_0(active1, 0x400L);
      default :
         break;
   }
   return jjMoveNfa_0(0, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(0, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 7);
   }
   switch(curChar)
   {
      case 12377:
         return jjMoveStringLiteralDfa9_0(active1, 0x400L);
      default :
         break;
   }
   return jjMoveNfa_0(0, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(0, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(0, 8);
   }
   switch(curChar)
   {
      case 12427:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 9;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(0, 9);
}
static final long[] jjbitVec0 = {
   0x800L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec1 = {
   0x2000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0x0L, 0x800000L
};
static final long[] jjbitVec3 = {
   0x20L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0x10000L, 0x0L
};
static final long[] jjbitVec5 = {
   0x20000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec6 = {
   0x40000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec7 = {
   0x0L, 0x8000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec8 = {
   0x10000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec9 = {
   0x0L, 0x4000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec10 = {
   0x0L, 0x100000000L, 0x0L, 0x0L
};
static final long[] jjbitVec11 = {
   0x2L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec12 = {
   0x1000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec13 = {
   0x80000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec14 = {
   0x0L, 0x2000000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec15 = {
   0x0L, 0x2000L, 0x0L, 0x0L
};
static final long[] jjbitVec16 = {
   0x0L, 0x4L, 0x0L, 0x0L
};
static final long[] jjbitVec17 = {
   0x0L, 0x0L, 0x40L, 0x0L
};
static final long[] jjbitVec18 = {
   0x0L, 0x0L, 0x400L, 0x0L
};
static final long[] jjbitVec19 = {
   0x0L, 0x0L, 0x8000L, 0x0L
};
static final long[] jjbitVec20 = {
   0x0L, 0x0L, 0x4000000L, 0x0L
};
static final long[] jjbitVec21 = {
   0x0L, 0x800L, 0x0L, 0x0L
};
static final long[] jjbitVec22 = {
   0x0L, 0x1000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec23 = {
   0x0L, 0x0L, 0x400000000L, 0x0L
};
static final long[] jjbitVec24 = {
   0x0L, 0x0L, 0x80000L, 0x0L
};
static final long[] jjbitVec25 = {
   0x0L, 0x400000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec26 = {
   0x0L, 0x0L, 0x80000000L, 0x0L
};
static final long[] jjbitVec27 = {
   0x0L, 0x0L, 0x800L, 0x0L
};
static final long[] jjbitVec28 = {
   0x0L, 0x2000000L, 0x0L, 0x0L
};
static final long[] jjbitVec29 = {
   0x0L, 0x1000L, 0x0L, 0x0L
};
static final long[] jjbitVec30 = {
   0x0L, 0x4000000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec31 = {
   0x0L, 0x40000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec32 = {
   0x0L, 0x80000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec33 = {
   0x0L, 0x800000L, 0x0L, 0x0L
};
static final long[] jjbitVec34 = {
   0x0L, 0x0L, 0x200L, 0x0L
};
static final long[] jjbitVec35 = {
   0x0L, 0x1000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec36 = {
   0x0L, 0x0L, 0x10L, 0x0L
};
static final long[] jjbitVec37 = {
   0x0L, 0x0L, 0x800000L, 0x0L
};
static final long[] jjbitVec38 = {
   0x8000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec39 = {
   0x0L, 0x20000L, 0x0L, 0x0L
};
static final long[] jjbitVec40 = {
   0x0L, 0x0L, 0x10000000L, 0x0L
};
static final long[] jjbitVec41 = {
   0x0L, 0x0L, 0x40000L, 0x0L
};
static final long[] jjbitVec42 = {
   0x0L, 0x0L, 0x0L, 0x1000000000000000L
};
static final long[] jjbitVec43 = {
   0x0L, 0x0L, 0x0L, 0x80000000000L
};
static final long[] jjbitVec44 = {
   0x0L, 0x4000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec45 = {
   0x200000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec46 = {
   0x0L, 0x0L, 0x0L, 0x10000000000000L
};
static final long[] jjbitVec47 = {
   0x200L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec48 = {
   0x7fffffe00000000L, 0x7fffffeL, 0x0L, 0x0L
};
static final long[] jjbitVec49 = {
   0x0L, 0x0L, 0x0L, 0x100000L
};
static final long[] jjbitVec50 = {
   0x0L, 0x0L, 0x1000L, 0x0L
};
static final long[] jjbitVec51 = {
   0x0L, 0x10L, 0x0L, 0x0L
};
static final long[] jjbitVec52 = {
   0x0L, 0x40L, 0x0L, 0x0L
};
static final long[] jjbitVec53 = {
   0x0L, 0x20000000L, 0x0L, 0x0L
};
static final long[] jjbitVec54 = {
   0x0L, 0x8000L, 0x0L, 0x0L
};
static final long[] jjbitVec55 = {
   0x0L, 0x10000000000L, 0x40000L, 0x0L
};
static final long[] jjbitVec56 = {
   0x400000000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec57 = {
   0x0L, 0x10000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec58 = {
   0x0L, 0x0L, 0x8000000L, 0x0L
};
static final long[] jjbitVec59 = {
   0x0L, 0x0L, 0x0L, 0x400000000000000L
};
static final long[] jjbitVec60 = {
   0x80000000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec61 = {
   0x200000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec62 = {
   0x200000000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec63 = {
   0x0L, 0x0L, 0x0L, 0x8000L
};
static final long[] jjbitVec64 = {
   0x0L, 0x0L, 0x0L, 0x80000000L
};
static final long[] jjbitVec65 = {
   0x1000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec66 = {
   0x800000000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec67 = {
   0x0L, 0x1000000L, 0x0L, 0x0L
};
static final long[] jjbitVec68 = {
   0x0L, 0x0L, 0x800000000000000L, 0x0L
};
static final long[] jjbitVec69 = {
   0x0L, 0x0L, 0x100L, 0x0L
};
static final long[] jjbitVec70 = {
   0x0L, 0x0L, 0x0L, 0x20000000L
};
static final long[] jjbitVec71 = {
   0x0L, 0x0L, 0x200000000000000L, 0x0L
};
static final long[] jjbitVec72 = {
   0x400000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec73 = {
   0x0L, 0x0L, 0x0L, 0x4000000L
};
static final long[] jjbitVec74 = {
   0x0L, 0x200000L, 0x0L, 0x0L
};
static final long[] jjbitVec75 = {
   0x40000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec76 = {
   0x0L, 0x0L, 0x0L, 0x400000000L
};
static final long[] jjbitVec77 = {
   0x20000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec78 = {
   0x0L, 0x0L, 0x80L, 0x0L
};
static final long[] jjbitVec79 = {
   0x0L, 0x0L, 0x1000000000L, 0x0L
};
static final long[] jjbitVec80 = {
   0x0L, 0x0L, 0x8000000000000000L, 0x0L
};
static final long[] jjbitVec81 = {
   0x0L, 0x0L, 0x400000000000000L, 0x0L
};
static final long[] jjbitVec82 = {
   0x0L, 0x0L, 0x20000000000000L, 0x0L
};
static final long[] jjbitVec83 = {
   0x0L, 0x0L, 0x0L, 0x20000000000L
};
static final long[] jjbitVec84 = {
   0x0L, 0x400000000L, 0x0L, 0x0L
};
static final long[] jjbitVec85 = {
   0x8000000000L, 0x0L, 0x0L, 0x0L
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 905;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 151)
                        kind = 151;
                     jjCheckNAddStates(0, 2);
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 154)
                        kind = 154;
                  }
                  else if (curChar == 44)
                  {
                     if (kind > 32)
                        kind = 32;
                  }
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 14;
                  else if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 10;
                  else if (curChar == 61)
                  {
                     if (kind > 16)
                        kind = 16;
                  }
                  else if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 5;
                  else if (curChar == 37)
                  {
                     if (kind > 13)
                        kind = 13;
                  }
                  else if (curChar == 42)
                  {
                     if (kind > 10)
                        kind = 10;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  if (curChar == 60)
                  {
                     if (kind > 19)
                        kind = 19;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 1:
                  if (curChar == 45)
                     kind = 9;
                  break;
               case 2:
                  if (curChar == 42)
                     kind = 10;
                  break;
               case 3:
                  if (curChar == 37)
                     kind = 13;
                  break;
               case 5:
                  if (curChar == 61 && kind > 14)
                     kind = 14;
                  break;
               case 6:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 61 && kind > 16)
                     kind = 16;
                  break;
               case 8:
                  if (curChar == 62 && kind > 17)
                     kind = 17;
                  break;
               case 10:
                  if (curChar == 61 && kind > 18)
                     kind = 18;
                  break;
               case 11:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 60 && kind > 19)
                     kind = 19;
                  break;
               case 14:
                  if (curChar == 61 && kind > 20)
                     kind = 20;
                  break;
               case 15:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 17:
                  if (curChar == 61 && kind > 21)
                     kind = 21;
                  break;
               case 18:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 44 && kind > 32)
                     kind = 32;
                  break;
               case 54:
                  if (curChar == 44 && kind > 62)
                     kind = 62;
                  break;
               case 68:
                  if (curChar == 44 && kind > 70)
                     kind = 70;
                  break;
               case 77:
                  if (curChar == 44 && kind > 71)
                     kind = 71;
                  break;
               case 92:
                  if (curChar == 40 && kind > 85)
                     kind = 85;
                  break;
               case 96:
                  if (curChar == 40 && kind > 93)
                     kind = 93;
                  break;
               case 100:
                  if (curChar == 40 && kind > 99)
                     kind = 99;
                  break;
               case 109:
                  if (curChar == 40 && kind > 112)
                     kind = 112;
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 153)
                     kind = 153;
                  jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 116:
                  if (curChar == 34)
                     kind = 154;
                  break;
               case 122:
                  if (curChar == 44 && kind > 64)
                     kind = 64;
                  break;
               case 135:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 152:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 187:
                  if (curChar == 40 && kind > 81)
                     kind = 81;
                  break;
               case 192:
                  if (curChar == 40 && kind > 91)
                     kind = 91;
                  break;
               case 195:
                  if (curChar == 40 && kind > 97)
                     kind = 97;
                  break;
               case 201:
                  if (curChar == 40 && kind > 101)
                     kind = 101;
                  break;
               case 204:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 208:
                  if (curChar == 40 && kind > 145)
                     kind = 145;
                  break;
               case 215:
                  if (curChar == 40 && kind > 82)
                     kind = 82;
                  break;
               case 221:
                  if (curChar == 40 && kind > 89)
                     kind = 89;
                  break;
               case 226:
                  if (curChar == 40 && kind > 98)
                     kind = 98;
                  break;
               case 233:
                  if (curChar == 40 && kind > 146)
                     kind = 146;
                  break;
               case 239:
                  if (curChar == 40 && kind > 147)
                     kind = 147;
                  break;
               case 246:
                  if (curChar == 40 && kind > 83)
                     kind = 83;
                  break;
               case 249:
                  if (curChar == 40 && kind > 86)
                     kind = 86;
                  break;
               case 253:
                  if (curChar == 40 && kind > 96)
                     kind = 96;
                  break;
               case 262:
                  if (curChar == 40 && kind > 100)
                     kind = 100;
                  break;
               case 265:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 269:
                  if (curChar == 40 && kind > 148)
                     kind = 148;
                  break;
               case 275:
                  if (curChar == 40 && kind > 84)
                     kind = 84;
                  break;
               case 278:
                  if (curChar == 40 && kind > 88)
                     kind = 88;
                  break;
               case 282:
                  if (curChar == 40 && kind > 102)
                     kind = 102;
                  break;
               case 289:
                  if (curChar == 40 && kind > 139)
                     kind = 139;
                  break;
               case 295:
                  if (curChar == 40 && kind > 87)
                     kind = 87;
                  break;
               case 300:
                  if (curChar == 40 && kind > 144)
                     kind = 144;
                  break;
               case 306:
                  if (curChar == 40 && kind > 90)
                     kind = 90;
                  break;
               case 309:
                  if (curChar == 40 && kind > 95)
                     kind = 95;
                  break;
               case 316:
                  if (curChar == 40 && kind > 92)
                     kind = 92;
                  break;
               case 319:
                  if (curChar == 40 && kind > 94)
                     kind = 94;
                  break;
               case 326:
                  if (curChar == 40 && kind > 103)
                     kind = 103;
                  break;
               case 332:
                  if (curChar == 40 && kind > 105)
                     kind = 105;
                  break;
               case 339:
                  if (curChar == 40 && kind > 106)
                     kind = 106;
                  break;
               case 346:
                  if (curChar == 40 && kind > 107)
                     kind = 107;
                  break;
               case 373:
                  if (curChar == 40 && kind > 104)
                     kind = 104;
                  break;
               case 453:
                  if (curChar == 40 && kind > 108)
                     kind = 108;
                  break;
               case 463:
                  if (curChar == 40 && kind > 109)
                     kind = 109;
                  break;
               case 470:
                  if (curChar == 40 && kind > 110)
                     kind = 110;
                  break;
               case 482:
                  if (curChar == 40 && kind > 111)
                     kind = 111;
                  break;
               case 507:
                  if (curChar == 40 && kind > 113)
                     kind = 113;
                  break;
               case 520:
                  if (curChar == 40 && kind > 114)
                     kind = 114;
                  break;
               case 533:
                  if (curChar == 40 && kind > 115)
                     kind = 115;
                  break;
               case 546:
                  if (curChar == 40 && kind > 116)
                     kind = 116;
                  break;
               case 558:
                  if (curChar == 40 && kind > 117)
                     kind = 117;
                  break;
               case 571:
                  if (curChar == 40 && kind > 118)
                     kind = 118;
                  break;
               case 579:
                  if (curChar == 40 && kind > 119)
                     kind = 119;
                  break;
               case 591:
                  if (curChar == 40 && kind > 120)
                     kind = 120;
                  break;
               case 603:
                  if (curChar == 40 && kind > 121)
                     kind = 121;
                  break;
               case 613:
                  if (curChar == 40 && kind > 122)
                     kind = 122;
                  break;
               case 622:
                  if (curChar == 40 && kind > 123)
                     kind = 123;
                  break;
               case 631:
                  if (curChar == 40 && kind > 124)
                     kind = 124;
                  break;
               case 642:
                  if (curChar == 40 && kind > 125)
                     kind = 125;
                  break;
               case 653:
                  if (curChar == 40 && kind > 126)
                     kind = 126;
                  break;
               case 662:
                  if (curChar == 40 && kind > 127)
                     kind = 127;
                  break;
               case 671:
                  if (curChar == 40 && kind > 128)
                     kind = 128;
                  break;
               case 679:
                  if (curChar == 40 && kind > 129)
                     kind = 129;
                  break;
               case 687:
                  if (curChar == 40 && kind > 130)
                     kind = 130;
                  break;
               case 695:
                  if (curChar == 40 && kind > 131)
                     kind = 131;
                  break;
               case 703:
                  if (curChar == 40 && kind > 132)
                     kind = 132;
                  break;
               case 715:
                  if (curChar == 40 && kind > 133)
                     kind = 133;
                  break;
               case 727:
                  if (curChar == 40 && kind > 134)
                     kind = 134;
                  break;
               case 740:
                  if (curChar == 40 && kind > 135)
                     kind = 135;
                  break;
               case 750:
                  if (curChar == 40 && kind > 140)
                     kind = 140;
                  break;
               case 756:
                  if (curChar == 40 && kind > 141)
                     kind = 141;
                  break;
               case 862:
                  if (curChar == 40 && kind > 136)
                     kind = 136;
                  break;
               case 867:
                  if (curChar == 40 && kind > 137)
                     kind = 137;
                  break;
               case 872:
                  if (curChar == 40 && kind > 138)
                     kind = 138;
                  break;
               case 878:
                  if (curChar == 40 && kind > 142)
                     kind = 142;
                  break;
               case 884:
                  if (curChar == 40 && kind > 143)
                     kind = 143;
                  break;
               case 890:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 151)
                     kind = 151;
                  jjCheckNAddStates(0, 2);
                  break;
               case 891:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 151)
                     kind = 151;
                  jjCheckNAdd(891);
                  break;
               case 892:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(892, 893);
                  break;
               case 893:
                  if (curChar == 46)
                     jjCheckNAdd(894);
                  break;
               case 894:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 152)
                     kind = 152;
                  jjCheckNAdd(894);
                  break;
               case 897:
                  if (curChar == 44 && kind > 63)
                     kind = 63;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 153)
                        kind = 153;
                     jjCheckNAdd(115);
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(3, 4);
                  else if ((0x800000008000L & l) != 0L)
                     jjAddStates(5, 7);
                  else if ((0x8000000080L & l) != 0L)
                     jjAddStates(8, 46);
                  else if ((0x100000001000L & l) != 0L)
                     jjAddStates(47, 48);
                  else if ((0x200000002L & l) != 0L)
                     jjAddStates(49, 50);
                  else if ((0x4000000040L & l) != 0L)
                     jjAddStates(51, 52);
                  else if ((0x800000008L & l) != 0L)
                     jjAddStates(53, 56);
                  else if ((0x8000000080000L & l) != 0L)
                     jjAddStates(57, 61);
                  else if ((0x4000000040000L & l) != 0L)
                     jjAddStates(62, 66);
                  else if ((0x20000000200L & l) != 0L)
                     jjAddStates(67, 71);
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 32;
                  else if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 26;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 20:
                  if (curChar == 101 && kind > 35)
                     kind = 35;
                  break;
               case 21:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 69 && kind > 35)
                     kind = 35;
                  break;
               case 25:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 29:
                  if (curChar == 101 && kind > 36)
                     kind = 36;
                  break;
               case 30:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 69 && kind > 36)
                     kind = 36;
                  break;
               case 35:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 91:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 93:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 94:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 97:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 98:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 101:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 102:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 114:
               case 115:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 153)
                     kind = 153;
                  jjCheckNAdd(115);
                  break;
               case 185:
                  if ((0x20000000200L & l) != 0L)
                     jjAddStates(67, 71);
                  break;
               case 186:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 188:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 189:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 193:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 194:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 196:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 197:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 202:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 203:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 205:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 209:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 210:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x4000000040000L & l) != 0L)
                     jjAddStates(62, 66);
                  break;
               case 214:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 216:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 217:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 222:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 223:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 227:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 228:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 234:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 235:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 240:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 241:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(57, 61);
                  break;
               case 245:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 247:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 248:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 250:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 251:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 254:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 255:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 263:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 264:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 266:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 270:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 271:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(53, 56);
                  break;
               case 274:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 276:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 277:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 279:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 280:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 283:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 284:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 290:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 291:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if ((0x4000000040L & l) != 0L)
                     jjAddStates(51, 52);
                  break;
               case 294:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 296:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 297:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 301:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 302:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if ((0x200000002L & l) != 0L)
                     jjAddStates(49, 50);
                  break;
               case 305:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 307:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 308:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 310:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 311:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if ((0x100000001000L & l) != 0L)
                     jjAddStates(47, 48);
                  break;
               case 315:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 317:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 318:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 320:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 321:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 351:
                  if ((0x8000000080L & l) != 0L)
                     jjAddStates(8, 46);
                  break;
               case 352:
                  if ((0x80000000800000L & l) != 0L)
                     jjCheckNAdd(326);
                  break;
               case 353:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(326);
                  break;
               case 363:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 374:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 375:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if ((0x80000000800000L & l) != 0L)
                     jjCheckNAdd(332);
                  break;
               case 389:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(332);
                  break;
               case 400:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 408:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if ((0x80000000800000L & l) != 0L)
                     jjCheckNAdd(339);
                  break;
               case 411:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 419:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAdd(339);
                  break;
               case 422:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 429:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 430:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if ((0x80000000800000L & l) != 0L)
                     jjCheckNAdd(346);
                  break;
               case 433:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(346);
                  break;
               case 443:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 450:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 451:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 454:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 455:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 464:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 465:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 466:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 467:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 471:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 472:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 474:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 475:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 476:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 477:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 483:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 484:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 485:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 489:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 490:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 491:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 493:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 495:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 496:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 497:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 498:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 499:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 500:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 501:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 506:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 508:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 509:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 510:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 513:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 514:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 516:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 517:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 518:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 519:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 521:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 522:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 525:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 526:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 527:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 528:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 527;
                  break;
               case 529:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 528;
                  break;
               case 530:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 531:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 532:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 534:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 535:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 536:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 537:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 538:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 539:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 540:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 541:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 542:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 543:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 544:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 545:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 547:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 548:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 549:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 550:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 551:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 552:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 553:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 554:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 555:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 556:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 557:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 559:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 560:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 561:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 562:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 563:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 564:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 565:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 566:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 567:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 568:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 569:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 570:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 572:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 573:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 574:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 575:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 576:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 577:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 578:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 580:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 581:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 582:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 583:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 584:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 585:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 586:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 587:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 588:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 589:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 590:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 592:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 593:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 594:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 595:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 596:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 598:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 599:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 600:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 601:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 602:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 604:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 605:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 606:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 607:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 608:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 609:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 610:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 611:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 612:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 614:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 615:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 616:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 617:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 618:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 619:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 620:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 621:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 623:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 624:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 625:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 626:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 627:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 628:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 629:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 630:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 632:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 633:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 634:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 636:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 637:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 638:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 639:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 640:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 641:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 643:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 644:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 645:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 646:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 647:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 648:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 649:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 650:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 649;
                  break;
               case 651:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 652:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 654:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 655:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 656:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 657:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 658:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 659:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 660:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 659;
                  break;
               case 661:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 663:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 661;
                  break;
               case 664:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 663;
                  break;
               case 665:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 666:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 665;
                  break;
               case 667:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 668:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 669:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 668;
                  break;
               case 670:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 671;
                  break;
               case 672:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 673:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 672;
                  break;
               case 674:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 673;
                  break;
               case 675:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 674;
                  break;
               case 676:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 675;
                  break;
               case 677:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 676;
                  break;
               case 678:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 679;
                  break;
               case 680:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 678;
                  break;
               case 681:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 680;
                  break;
               case 682:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 681;
                  break;
               case 683:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 682;
                  break;
               case 684:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 685:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 684;
                  break;
               case 686:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 687;
                  break;
               case 688:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 686;
                  break;
               case 689:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 688;
                  break;
               case 690:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 689;
                  break;
               case 691:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 690;
                  break;
               case 692:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 691;
                  break;
               case 693:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 692;
                  break;
               case 694:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 695;
                  break;
               case 696:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 694;
                  break;
               case 697:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 696;
                  break;
               case 698:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 697;
                  break;
               case 699:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 698;
                  break;
               case 700:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 699;
                  break;
               case 701:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 700;
                  break;
               case 702:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 703;
                  break;
               case 704:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 702;
                  break;
               case 705:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 704;
                  break;
               case 706:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 705;
                  break;
               case 707:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 706;
                  break;
               case 708:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 707;
                  break;
               case 709:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 710:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 709;
                  break;
               case 711:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 710;
                  break;
               case 712:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 711;
                  break;
               case 713:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 712;
                  break;
               case 714:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 715;
                  break;
               case 716:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 714;
                  break;
               case 717:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 716;
                  break;
               case 718:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 719:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 718;
                  break;
               case 720:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 719;
                  break;
               case 721:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 720;
                  break;
               case 722:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 723:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 724:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 723;
                  break;
               case 725:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 724;
                  break;
               case 726:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 728:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 726;
                  break;
               case 729:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 730:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 731:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 730;
                  break;
               case 732:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 733:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 734:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 735:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 736:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 737:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 738:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 737;
                  break;
               case 739:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 740;
                  break;
               case 741:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 739;
                  break;
               case 742:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 741;
                  break;
               case 743:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 744:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 743;
                  break;
               case 745:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 744;
                  break;
               case 746:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 747:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 748:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 749:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 750;
                  break;
               case 751:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 752:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 751;
                  break;
               case 753:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 752;
                  break;
               case 754:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 753;
                  break;
               case 755:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 756;
                  break;
               case 757:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 758:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 757;
                  break;
               case 759:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 758;
                  break;
               case 760:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 761:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 860:
                  if ((0x800000008000L & l) != 0L)
                     jjAddStates(5, 7);
                  break;
               case 861:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 862;
                  break;
               case 863:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 861;
                  break;
               case 864:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 863;
                  break;
               case 865:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 864;
                  break;
               case 866:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 867;
                  break;
               case 868:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 866;
                  break;
               case 869:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 868;
                  break;
               case 870:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 869;
                  break;
               case 871:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 872;
                  break;
               case 873:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 871;
                  break;
               case 874:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 873;
                  break;
               case 875:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 874;
                  break;
               case 876:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(3, 4);
                  break;
               case 877:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 878;
                  break;
               case 879:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 877;
                  break;
               case 880:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 879;
                  break;
               case 881:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 880;
                  break;
               case 882:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 881;
                  break;
               case 883:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 884;
                  break;
               case 885:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 883;
                  break;
               case 886:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 885;
                  break;
               case 887:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 886;
                  break;
               case 888:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 887;
                  break;
               case 889:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 888;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 10)
                        kind = 10;
                  }
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 13)
                        kind = 13;
                  }
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 14)
                        kind = 14;
                  }
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 16)
                        kind = 16;
                  }
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 18)
                        kind = 18;
                  }
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 19)
                        kind = 19;
                  }
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 20)
                        kind = 20;
                  }
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 32)
                        kind = 32;
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 35)
                        kind = 35;
                  }
                  if (jjCanMove_13(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 36)
                        kind = 36;
                  }
                  if (jjCanMove_20(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 45;
                  if (jjCanMove_22(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 47;
                  if (jjCanMove_24(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 53;
                  if (jjCanMove_32(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 64;
                  if (jjCanMove_38(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 73;
                  if (jjCanMove_39(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 82;
                  if (jjCanMove_45(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 89;
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 107;
                  if (jjCanMove_52(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 153)
                        kind = 153;
                     jjCheckNAdd(115);
                  }
                  if (jjCanMove_53(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 154)
                        kind = 154;
                  }
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjAddStates(72, 73);
                  if (jjCanMove_43(hiByte, i1, i2, l1, l2))
                     jjAddStates(74, 76);
                  if (jjCanMove_43(hiByte, i1, i2, l1, l2))
                     jjAddStates(77, 78);
                  if (jjCanMove_63(hiByte, i1, i2, l1, l2))
                     jjAddStates(79, 82);
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjAddStates(83, 86);
                  if (jjCanMove_84(hiByte, i1, i2, l1, l2))
                     jjAddStates(87, 88);
                  if (jjCanMove_86(hiByte, i1, i2, l1, l2))
                     jjAddStates(89, 94);
                  if (jjCanMove_92(hiByte, i1, i2, l1, l2))
                     jjAddStates(95, 99);
                  if (jjCanMove_98(hiByte, i1, i2, l1, l2))
                     jjAddStates(100, 101);
                  if (jjCanMove_99(hiByte, i1, i2, l1, l2))
                     jjAddStates(102, 103);
                  if (jjCanMove_100(hiByte, i1, i2, l1, l2))
                     jjAddStates(104, 105);
                  if (jjCanMove_102(hiByte, i1, i2, l1, l2))
                     jjAddStates(106, 107);
                  if (jjCanMove_55(hiByte, i1, i2, l1, l2))
                     jjAddStates(108, 111);
                  break;
               case 1:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 9)
                     kind = 9;
                  break;
               case 2:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 10)
                     kind = 10;
                  break;
               case 3:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 13)
                     kind = 13;
                  break;
               case 4:
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2) && kind > 14)
                     kind = 14;
                  break;
               case 7:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2) && kind > 16)
                     kind = 16;
                  break;
               case 8:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2) && kind > 17)
                     kind = 17;
                  break;
               case 9:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2) && kind > 18)
                     kind = 18;
                  break;
               case 12:
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2) && kind > 19)
                     kind = 19;
                  break;
               case 13:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2) && kind > 20)
                     kind = 20;
                  break;
               case 16:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2) && kind > 21)
                     kind = 21;
                  break;
               case 19:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 32)
                     kind = 32;
                  break;
               case 28:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2) && kind > 35)
                     kind = 35;
                  break;
               case 39:
                  if (jjCanMove_13(hiByte, i1, i2, l1, l2) && kind > 36)
                     kind = 36;
                  break;
               case 40:
                  if (jjCanMove_14(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if (jjCanMove_15(hiByte, i1, i2, l1, l2))
                     jjAddStates(112, 113);
                  break;
               case 42:
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2) && kind > 51)
                     kind = 51;
                  break;
               case 43:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2) && kind > 51)
                     kind = 51;
                  break;
               case 44:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 46:
                  if (jjCanMove_20(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (jjCanMove_21(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if (jjCanMove_15(hiByte, i1, i2, l1, l2))
                     jjAddStates(114, 115);
                  break;
               case 49:
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2) && kind > 54)
                     kind = 54;
                  break;
               case 50:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2) && kind > 54)
                     kind = 54;
                  break;
               case 51:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (jjCanMove_22(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 53:
                  if (jjCanMove_23(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 62)
                     kind = 62;
                  break;
               case 55:
                  if (jjCanMove_24(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 56:
                  if (jjCanMove_25(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 57:
                  if (jjCanMove_26(hiByte, i1, i2, l1, l2))
                     jjAddStates(116, 117);
                  break;
               case 58:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2) && kind > 65)
                     kind = 65;
                  break;
               case 59:
                  if (jjCanMove_28(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2) && kind > 65)
                     kind = 65;
                  break;
               case 62:
                  if (jjCanMove_30(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 63:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (jjCanMove_32(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                     jjAddStates(118, 119);
                  break;
               case 67:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(68);
                  break;
               case 68:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 70)
                     kind = 70;
                  break;
               case 69:
                  if (jjCanMove_35(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 70:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (jjCanMove_36(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(68);
                  break;
               case 72:
                  if (jjCanMove_36(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (jjCanMove_37(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 74:
                  if (jjCanMove_38(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                     jjAddStates(120, 121);
                  break;
               case 76:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(77);
                  break;
               case 77:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 71)
                     kind = 71;
                  break;
               case 78:
                  if (jjCanMove_35(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 79:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (jjCanMove_36(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(77);
                  break;
               case 81:
                  if (jjCanMove_36(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 83:
                  if (jjCanMove_39(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (jjCanMove_40(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(88);
                  break;
               case 85:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2) && kind > 79)
                     kind = 79;
                  break;
               case 86:
                  if (jjCanMove_41(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (jjCanMove_42(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (jjCanMove_43(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (jjCanMove_44(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 90:
                  if (jjCanMove_45(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 107:
                  if (jjCanMove_46(hiByte, i1, i2, l1, l2))
                     jjAddStates(122, 123);
                  break;
               case 108:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(109);
                  break;
               case 110:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 111:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(109);
                  break;
               case 112:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 114:
               case 115:
                  if (!jjCanMove_52(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 153)
                     kind = 153;
                  jjCheckNAdd(115);
                  break;
               case 116:
                  if (jjCanMove_53(hiByte, i1, i2, l1, l2) && kind > 154)
                     kind = 154;
                  break;
               case 117:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjAddStates(72, 73);
                  break;
               case 118:
                  if (jjCanMove_54(hiByte, i1, i2, l1, l2) && kind > 59)
                     kind = 59;
                  break;
               case 119:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2) && kind > 59)
                     kind = 59;
                  break;
               case 121:
                  if (jjCanMove_43(hiByte, i1, i2, l1, l2))
                     jjAddStates(74, 76);
                  break;
               case 122:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 64)
                     kind = 64;
                  break;
               case 123:
                  if (jjCanMove_55(hiByte, i1, i2, l1, l2))
                     jjAddStates(124, 125);
                  break;
               case 124:
                  if (jjCanMove_28(hiByte, i1, i2, l1, l2) && kind > 72)
                     kind = 72;
                  break;
               case 125:
               case 127:
                  if (jjCanMove_56(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(124);
                  break;
               case 126:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 128:
                  if (jjCanMove_26(hiByte, i1, i2, l1, l2))
                     jjAddStates(126, 127);
                  break;
               case 129:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2) && kind > 58)
                     kind = 58;
                  break;
               case 130:
                  if (jjCanMove_28(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2) && kind > 58)
                     kind = 58;
                  break;
               case 133:
                  if (jjCanMove_43(hiByte, i1, i2, l1, l2))
                     jjAddStates(77, 78);
                  break;
               case 134:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 135:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 136:
                  if (jjCanMove_25(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 137:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjAddStates(128, 130);
                  break;
               case 138:
                  if (jjCanMove_54(hiByte, i1, i2, l1, l2) && kind > 60)
                     kind = 60;
                  break;
               case 139:
                  if (jjCanMove_57(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(138);
                  break;
               case 140:
                  if (jjCanMove_41(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2) && kind > 60)
                     kind = 60;
                  break;
               case 142:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if (jjCanMove_58(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (jjCanMove_34(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(138);
                  break;
               case 145:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (jjCanMove_58(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (jjCanMove_59(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 148:
                  if (jjCanMove_60(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 150:
                  if (jjCanMove_26(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 152:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 153:
                  if (jjCanMove_25(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 154:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjAddStates(131, 132);
                  break;
               case 155:
                  if (jjCanMove_61(hiByte, i1, i2, l1, l2) && kind > 61)
                     kind = 61;
                  break;
               case 156:
                  if (jjCanMove_62(hiByte, i1, i2, l1, l2) && kind > 61)
                     kind = 61;
                  break;
               case 157:
                  if (jjCanMove_61(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (jjCanMove_59(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 159:
                  if (jjCanMove_60(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 161:
                  if (jjCanMove_26(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (jjCanMove_63(hiByte, i1, i2, l1, l2))
                     jjAddStates(79, 82);
                  break;
               case 163:
                  if (jjCanMove_64(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(165);
                  break;
               case 164:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2) && kind > 77)
                     kind = 77;
                  break;
               case 165:
                  if (jjCanMove_28(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (jjCanMove_65(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 167:
                  if (jjCanMove_66(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(165);
                  break;
               case 168:
                  if (jjCanMove_67(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (jjCanMove_68(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(165);
                  break;
               case 170:
                  if (jjCanMove_69(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (jjCanMove_29(hiByte, i1, i2, l1, l2))
                     jjAddStates(133, 134);
                  break;
               case 172:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 173:
                  if (jjCanMove_25(hiByte, i1, i2, l1, l2))
                     jjAddStates(135, 137);
                  break;
               case 174:
                  if (jjCanMove_64(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(176);
                  break;
               case 175:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2) && kind > 78)
                     kind = 78;
                  break;
               case 176:
                  if (jjCanMove_28(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (jjCanMove_65(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 178:
                  if (jjCanMove_66(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(176);
                  break;
               case 179:
                  if (jjCanMove_67(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (jjCanMove_68(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(176);
                  break;
               case 181:
                  if (jjCanMove_69(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (jjCanMove_31(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(172);
                  break;
               case 183:
                  if (jjCanMove_70(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(172);
                  break;
               case 184:
                  if (jjCanMove_71(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 324:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjAddStates(83, 86);
                  break;
               case 325:
                  if (jjCanMove_61(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 327:
                  if (jjCanMove_73(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 328:
                  if (jjCanMove_74(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (jjCanMove_75(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (jjCanMove_27(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 333:
                  if (jjCanMove_77(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 334:
                  if (jjCanMove_78(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (jjCanMove_74(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (jjCanMove_75(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if (jjCanMove_79(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 340:
                  if (jjCanMove_80(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 341:
                  if (jjCanMove_81(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (jjCanMove_74(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (jjCanMove_75(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (jjCanMove_82(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 347:
                  if (jjCanMove_83(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 348:
                  if (jjCanMove_74(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (jjCanMove_75(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 762:
                  if (jjCanMove_84(hiByte, i1, i2, l1, l2))
                     jjAddStates(87, 88);
                  break;
               case 763:
                  if (jjCanMove_85(hiByte, i1, i2, l1, l2))
                     jjAddStates(138, 139);
                  break;
               case 764:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(470);
                  break;
               case 765:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 764;
                  break;
               case 766:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(470);
                  break;
               case 767:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 766;
                  break;
               case 768:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 769:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 768;
                  break;
               case 770:
                  if (jjCanMove_86(hiByte, i1, i2, l1, l2))
                     jjAddStates(89, 94);
                  break;
               case 771:
                  if (jjCanMove_46(hiByte, i1, i2, l1, l2))
                     jjAddStates(140, 141);
                  break;
               case 772:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(482);
                  break;
               case 773:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 772;
                  break;
               case 774:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(482);
                  break;
               case 775:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 774;
                  break;
               case 776:
                  if (jjCanMove_85(hiByte, i1, i2, l1, l2))
                     jjAddStates(142, 143);
                  break;
               case 777:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(507);
                  break;
               case 778:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 779:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(507);
                  break;
               case 780:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 781:
                  if (jjCanMove_87(hiByte, i1, i2, l1, l2))
                     jjAddStates(144, 145);
                  break;
               case 782:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(520);
                  break;
               case 783:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 784:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(520);
                  break;
               case 785:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 786:
                  if (jjCanMove_88(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 787:
                  if (jjCanMove_89(hiByte, i1, i2, l1, l2))
                     jjAddStates(146, 147);
                  break;
               case 788:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(533);
                  break;
               case 789:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 790:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(533);
                  break;
               case 791:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 790;
                  break;
               case 792:
                  if (jjCanMove_90(hiByte, i1, i2, l1, l2))
                     jjAddStates(148, 149);
                  break;
               case 793:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(546);
                  break;
               case 794:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 793;
                  break;
               case 795:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(546);
                  break;
               case 796:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 797:
                  if (jjCanMove_91(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 798:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 799:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 800:
                  if (jjCanMove_92(hiByte, i1, i2, l1, l2))
                     jjAddStates(95, 99);
                  break;
               case 801:
                  if (jjCanMove_46(hiByte, i1, i2, l1, l2))
                     jjAddStates(150, 151);
                  break;
               case 802:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(558);
                  break;
               case 803:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 802;
                  break;
               case 804:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(558);
                  break;
               case 805:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 804;
                  break;
               case 806:
                  if (jjCanMove_93(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 801;
                  break;
               case 807:
                  if (jjCanMove_85(hiByte, i1, i2, l1, l2))
                     jjAddStates(152, 153);
                  break;
               case 808:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(571);
                  break;
               case 809:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 808;
                  break;
               case 810:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(571);
                  break;
               case 811:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 810;
                  break;
               case 812:
                  if (jjCanMove_93(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 813:
                  if (jjCanMove_40(hiByte, i1, i2, l1, l2))
                     jjAddStates(154, 155);
                  break;
               case 814:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(579);
                  break;
               case 815:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 814;
                  break;
               case 816:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(579);
                  break;
               case 817:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 816;
                  break;
               case 818:
                  if (jjCanMove_94(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 813;
                  break;
               case 819:
                  if (jjCanMove_95(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 818;
                  break;
               case 820:
                  if (jjCanMove_93(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 819;
                  break;
               case 821:
                  if (jjCanMove_96(hiByte, i1, i2, l1, l2))
                     jjAddStates(156, 157);
                  break;
               case 822:
                  if (jjCanMove_47(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(591);
                  break;
               case 823:
                  if (jjCanMove_48(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 822;
                  break;
               case 824:
                  if (jjCanMove_49(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(591);
                  break;
               case 825:
                  if (jjCanMove_50(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 824;
                  break;
               case 826:
                  if (jjCanMove_94(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 827:
                  if (jjCanMove_97(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 826;
                  break;
               case 828:
                  if (jjCanMove_93(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 827;
                  break;
               case 829:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 830:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 829;
                  break;
               case 831:
                  if (jjCanMove_93(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 830;
                  break;
               case 832:
                  if (jjCanMove_98(hiByte, i1, i2, l1, l2))
                     jjAddStates(100, 101);
                  break;
               case 833:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 834:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 833;
                  break;
               case 835:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 836:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 835;
                  break;
               case 837:
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 836;
                  break;
               case 838:
                  if (jjCanMove_99(hiByte, i1, i2, l1, l2))
                     jjAddStates(102, 103);
                  break;
               case 839:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 840:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 839;
                  break;
               case 841:
                  if (jjCanMove_98(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 840;
                  break;
               case 842:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 843:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 842;
                  break;
               case 844:
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 843;
                  break;
               case 845:
                  if (jjCanMove_98(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 844;
                  break;
               case 846:
                  if (jjCanMove_100(hiByte, i1, i2, l1, l2))
                     jjAddStates(104, 105);
                  break;
               case 847:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 671;
                  break;
               case 848:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 847;
                  break;
               case 849:
                  if (jjCanMove_101(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 848;
                  break;
               case 850:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 679;
                  break;
               case 851:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 850;
                  break;
               case 852:
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 851;
                  break;
               case 853:
                  if (jjCanMove_101(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 852;
                  break;
               case 854:
                  if (jjCanMove_102(hiByte, i1, i2, l1, l2))
                     jjAddStates(106, 107);
                  break;
               case 855:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 687;
                  break;
               case 856:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 855;
                  break;
               case 857:
                  if (jjCanMove_76(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 695;
                  break;
               case 858:
                  if (jjCanMove_72(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 857;
                  break;
               case 859:
                  if (jjCanMove_51(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 858;
                  break;
               case 895:
                  if (jjCanMove_55(hiByte, i1, i2, l1, l2))
                     jjAddStates(108, 111);
                  break;
               case 896:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 897;
                  break;
               case 897:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 63)
                     kind = 63;
                  break;
               case 898:
               case 900:
                  if (jjCanMove_56(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(896);
                  break;
               case 899:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 898;
                  break;
               case 901:
                  if (jjCanMove_33(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(88);
                  break;
               case 902:
               case 904:
                  if (jjCanMove_56(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(901);
                  break;
               case 903:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 902;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 905 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      case 0:
         if ((active2 & 0xe0000000L) != 0L)
            return 2;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 92:
         return jjMoveStringLiteralDfa1_1(0xe0000000L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active2)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, 0L, 0L, active2);
      return 1;
   }
   switch(curChar)
   {
      case 110:
         if ((active2 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 157);
         break;
      case 114:
         if ((active2 & 0x40000000L) != 0L)
            return jjStopAtPos(1, 158);
         break;
      case 116:
         if ((active2 & 0x80000000L) != 0L)
            return jjStopAtPos(1, 159);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, 0L, 0L, active2);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if (curChar == 34 && kind > 156)
                     kind = 156;
                  break;
               case 0:
                  if ((0x400002400L & l) != 0L && kind > 155)
                     kind = 155;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 92)
                     jjAddStates(158, 160);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if (jjCanMove_103(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 156)
                        kind = 156;
                  }
                  if (jjCanMove_53(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 156)
                        kind = 156;
                  }
                  break;
               case 0:
                  if (jjCanMove_103(hiByte, i1, i2, l1, l2) && kind > 155)
                     kind = 155;
                  break;
               case 3:
                  if (jjCanMove_103(hiByte, i1, i2, l1, l2) && kind > 156)
                     kind = 156;
                  break;
               case 4:
                  if (jjCanMove_53(hiByte, i1, i2, l1, l2) && kind > 156)
                     kind = 156;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_2(0x400000000L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active2)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active2 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 162);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   891, 892, 893, 882, 889, 865, 870, 875, 361, 371, 387, 398, 409, 420, 431, 441, 
   451, 461, 468, 480, 493, 505, 518, 531, 544, 556, 569, 577, 589, 601, 611, 620, 
   629, 640, 651, 660, 669, 677, 685, 693, 701, 713, 725, 738, 748, 754, 761, 317, 
   323, 307, 313, 298, 303, 276, 280, 287, 292, 247, 251, 260, 267, 272, 219, 224, 
   231, 237, 243, 190, 193, 199, 206, 212, 119, 120, 122, 123, 128, 150, 161, 166, 
   168, 170, 184, 330, 337, 344, 350, 763, 769, 771, 776, 786, 787, 797, 799, 806, 
   812, 820, 828, 831, 834, 837, 841, 845, 849, 853, 856, 859, 899, 900, 903, 904, 
   42, 44, 49, 51, 60, 61, 70, 72, 79, 81, 110, 112, 126, 127, 131, 132, 
   140, 143, 146, 155, 157, 182, 183, 177, 179, 181, 765, 767, 773, 775, 778, 780, 
   783, 785, 789, 791, 794, 796, 803, 805, 809, 811, 815, 817, 823, 825, 2, 3, 
   4, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec0[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec1[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_3(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec3[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_4(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 33:
         return ((jjbitVec4[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_5(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec5[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_6(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec6[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_7(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec7[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_8(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec8[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_9(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec9[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_10(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec10[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_11(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec11[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec12[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_12(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 119:
         return ((jjbitVec13[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_13(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 80:
         return ((jjbitVec14[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_14(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec15[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_15(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 125:
         return ((jjbitVec16[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_16(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 78:
         return ((jjbitVec17[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_17(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec18[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_18(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec19[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_19(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 125:
         return ((jjbitVec20[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_20(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 98:
         return ((jjbitVec21[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_21(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 101:
         return ((jjbitVec22[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_22(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 149:
         return ((jjbitVec23[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_23(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 149:
         return ((jjbitVec24[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_24(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec25[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_25(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec7[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_26(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 91:
         return ((jjbitVec26[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_27(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec27[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_28(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec28[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_29(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 136:
         return ((jjbitVec29[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_30(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec30[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_31(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec31[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_32(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec32[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_33(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec33[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_34(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec34[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_35(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec29[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_36(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec35[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_37(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec36[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_38(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 88:
         return ((jjbitVec37[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_39(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 110:
         return ((jjbitVec38[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_40(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_41(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec39[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_42(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 98:
         return ((jjbitVec40[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_43(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec41[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_44(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec42[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_45(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec43[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_46(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 130:
         return ((jjbitVec44[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_47(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 91:
         return ((jjbitVec20[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_48(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 138:
         return ((jjbitVec45[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_49(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 102:
         return ((jjbitVec46[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_50(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 89:
         return ((jjbitVec47[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_51(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 88:
         return ((jjbitVec33[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_52(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec48[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_53(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec12[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_54(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec22[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_55(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 126:
         return ((jjbitVec22[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_56(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 143:
         return ((jjbitVec49[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_57(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec50[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_58(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec51[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_59(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec52[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_60(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec53[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_61(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec54[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_62(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec9[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_63(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec55[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_64(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 121:
         return ((jjbitVec56[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_65(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 136:
         return ((jjbitVec57[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_66(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 82:
         return ((jjbitVec58[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_67(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 81:
         return ((jjbitVec59[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_68(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 82:
         return ((jjbitVec60[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_69(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 83:
         return ((jjbitVec22[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_70(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 113:
         return ((jjbitVec61[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_71(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 101:
         return ((jjbitVec62[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_72(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 99:
         return ((jjbitVec63[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_73(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 149:
         return ((jjbitVec27[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_74(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 87:
         return ((jjbitVec64[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_75(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 152:
         return ((jjbitVec65[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_76(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 117:
         return ((jjbitVec66[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_77(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec67[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_78(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 149:
         return ((jjbitVec34[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_79(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 83:
         return ((jjbitVec68[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_80(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 109:
         return ((jjbitVec69[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_81(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 81:
         return ((jjbitVec57[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_82(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 91:
         return ((jjbitVec67[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_83(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 79:
         return ((jjbitVec70[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_84(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 112:
         return ((jjbitVec71[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_85(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 122:
         return ((jjbitVec72[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_86(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 125:
         return ((jjbitVec73[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_87(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec74[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_88(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 89:
         return ((jjbitVec75[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_89(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 119:
         return ((jjbitVec76[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_90(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 84:
         return ((jjbitVec77[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_91(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 101:
         return ((jjbitVec71[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_92(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 101:
         return ((jjbitVec78[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_93(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 91:
         return ((jjbitVec33[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_94(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec79[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_95(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec80[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_96(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec81[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_97(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec82[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_98(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 81:
         return ((jjbitVec17[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_99(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 105:
         return ((jjbitVec74[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_100(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 119:
         return ((jjbitVec83[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_101(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 95:
         return ((jjbitVec84[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_102(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 95:
         return ((jjbitVec85[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_103(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 48:
         return ((jjbitVec1[i2] & l2) != 0L);
      default :
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, "\367", "\57", 
null, null, "\55\76", null, null, null, null, null, null, "\u304b\u3064", 
"\u307e\u305f\u306f", "\u3067\u306a\u3044", "\173", "\175", "\133", "\135", "\50", "\51", "\12", 
null, "\u3068", "\56", null, null, "\105\117\106", "\114\106", "\103\122", 
"\116\114", "\110\124", "\116\125\114\114", "\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570", 
"\u6574\u6570", "\u5b9f\u6570", "\u6587\u5b57\u5217", "\u771f\u507d", null, "\u53c2\u7167", 
"\u624b\u7d9a\u304d", null, "\u624b\u7d9a\u304d\u3092\u629c\u3051\u308b", "\u95a2\u6570", null, 
"\u95a2\u6570\u3092\u629c\u3051\u308b", "\u3092\u8fd4\u3059", "\u3082\u3057", null, null, null, null, null, null, null, 
null, "\u3092", "\u304b\u3089", "\u307e\u3067", "\u305a\u3064", null, null, null, 
"\u306e\u5024\u306b\u5fdc\u3058\u3066", "\u306e\u3044\u305a\u308c\u304b\u3092\u5b9f\u884c\u3059\u308b", 
"\u306e\u5834\u5408\uff1a", "\u305d\u306e\u4ed6\u306e\u5834\u5408\uff1a", null, null, null, 
"\u3092\u5165\u529b\u3059\u308b", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "STR",
   "COMM",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, 2, 0, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffffff01L, 0xffffffffffffffffL, 0xb9fffffL, 
};
static final long[] jjtoSkip = {
   0xfeL, 0x0L, 0x400000000L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 0x400000000L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 0xbf4000000L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[905];
private final int[] jjstateSet = new int[1810];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public IntVParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public IntVParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 905; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 160)
         {
            jjmatchedKind = 160;
         }
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 163)
         {
            jjmatchedKind = 163;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 156 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                        image.deleteCharAt(image.length() - 2);
         break;
      case 157 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                        image.delete(image.length() - 2, image.length());
                        image.append('\u005cn');
         break;
      case 158 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                        image.delete(image.length() - 2, image.length());
                        image.append('\u005cr');
         break;
      case 159 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                        image.delete(image.length() - 2, image.length());
                        image.append('\u005ct');
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 153 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                        int idx;
                        int len = image.length();

                        if (!Character.isJavaIdentifierStart(image.charAt(0))) {
                                ++nLexicalErrors;
                                throw new ParseError(
                                        "### " + matchedToken.beginLine + "\u884c\u76ee\u3067"
                                        + "\u30a8\u30e9\u30fc\u3067\u3059 : \u005c""
                                        + matchedToken.image.charAt(0)
                                        + "\u005c"("
                                        + Integer.toHexString(matchedToken.image.charAt(0))
                                        + ")\u005cn"
                                );
                        }
                        for (idx = 1; idx < len; ++idx) {
                                if (!Character.isJavaIdentifierPart(image.charAt(idx))) {
                                        ++nLexicalErrors;
                                        throw new ParseError(
                                                "### " + matchedToken.beginLine + "\u884c\u76ee\u3067"
                                                + "\u30a8\u30e9\u30fc\u3067\u3059 : \u005c""
                                                + matchedToken.image.charAt(idx)
                                                + "\u005c"("
                                                + Integer.toHexString(matchedToken.image.charAt(idx))
                                                + ")\u005cn"
                                        );
                                }
                        }
         break;
      case 155 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                        if ( (image.charAt(0) == '\u005c"' && image.charAt(image.length()-1) == '\u005c"') ||
                         (image.charAt(0) == '\u300c' && image.charAt(image.length()-1) == '\u300d') ){
                                matchedToken.image = image.substring(1, image.length()-1);
                        }else{
                                ++nLexicalErrors;
                                matchedToken.image = image.substring(1, image.length()-2);
                                throw new ParseError(
                                        "### " + matchedToken.beginLine + "\u884c\u76ee\u306e"
                                        + "\u51fa\u529b\u6587\u3067[\u005c"] \u304b[ \u300d]\u3092\u5fd8\u308c\u3066\u3044\u307e\u305b\u3093\u304b\uff1f\u005cn"
                                );
                        }
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
