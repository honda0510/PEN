# 変数宣言の要/不要を設定します
#
# 設定値は以下の通りです
# 設定値: 設定内容
# 0	: 変数宣言必須  ない場合:エラー
# 1	: 変数宣言不要  ない場合:警告表示
# 2	: 変数宣言不要  ない場合:警告表示もなし
#			変数の型は代入値によって決められる
# 3	: 変数宣言不要  ない場合:警告表示もなし
#			代入値が数値の場合、変数の型は実数型になる
executer.var.declaration=0


# 変数名に半角/全角を使用できるか設定します
#
# 設定値は以下の通りです
# 設定値: 設定内容
# 0	: 変数名に全角使用不可
# 1	: 変数名に全角使用可能（半角/全角は別扱い）
# 2	: 変数名に全角を使用した場合、半角に変換
executer.var.names=0


# 配列の添字の範囲を設定します
#
# 設定値は以下の通りです
# 設定値: 設定内容（配列 X[n] を宣言した場合）
# 0	: X[0],...,X[n]  の要素を確保する
# 1	: X[0],...,X[n-1]の要素を確保する
# 2	: X[1],...,X[n]  の要素を確保する
executer.array.origin=0


# 描画ウィンドウの原点を設定します
#
# 設定値は以下の通りです
# 0	: 左上を原点にする
# 1	: 左下を原点にする
executer.graphic.origin=0


# 除算演算の設定をします
#
# 設定値は以下の通りです
# 0	: / と ÷ は同一とする
# 1	: / は商、÷ は商の整数部を返す
executer.div.mode=0

# 別ファイルで入力支援ボタン定義を作成し
# その定義ファイルを用いてPENを起動したい場合は
# 定義ファイルまでのパスを設定値に記述してください
# pen.button.path=./ButtonList/Default.ini


# フォントサイズを大きくして起動するかしないかの設定
#
# 設定値は以下の通りです
# 0 : 通常起動します
# 1 : フォントサイズを大きくして起動します
# pen.teacher.flag=0


# デバックモードで起動するかしないかの設定
# なお、デバッグ結果はコンソールに出力されます
#
# 設定値は以下の通りです
# 0 : 通常起動します
# 1 : debugモードで起動します
# pen.debug.flag=0


# xDNCLを実行したときエラーがあれば
# dumpファイルを出力するかしないかの設定
#
# 設定値は以下の通りです
# 0 : dumpファイルを生成しない
# 1 : dumpファイルを生成する
# pen.dump.flag=0

# dumpファイルを一時的に保存するディレクトリを指定します
# 設定なければ HOMEディレクトリ
# pen.dump.tempdir=一時保存ディレクトリ

# 一時保存したdumpファイルの最終保存先を指定します
# （ログファイル保存先にdumpファイルを移動）
# 設定なければ HOMEディレクトリ
# pen.dump.destdir=ログファイル保存先


# ファイルの読み込み文字コードを設定します
# 設定なければファイル読み込み時に文字コードを判定します。
# 自動判定できる文字コード :  EUC_JP, Shift_JIS, JIS 
# pen.system.code=UTF-8


# ArduinoIDEがインストールされているパスを設定します
# 設定がなければ「Arduinoへの書き込み」が動作しません
arduino.exec.path=/Applications/Arduino.app